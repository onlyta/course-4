@mixin font-face($_font-name, $_font-file, $_font-weight, $_font-style: normal) {
    @font-face {
        font-family: $_font-name;
        font-style: $_font-style;
        font-weight: $_font-weight;
        src: local(''),
        url('#{$path-fonts}#{$_font-file}.woff2') format('woff2'),
        url('#{$path-fonts}#{$_font-file}.woff') format('woff');
    }
}

@mixin grid($count) {
    @include container;

    .row {
        display: flex;
        flex-wrap: wrap;
        margin: 0 (-$gap);
    }

    [class^="col-"] {
        padding: $gap;
        box-sizing: border-box;
    }

    @for $i from 1 through $count {
        $width: math.div(100%, $count) * $i;

        .col-#{$i} {
            max-width: $width;
            width: 100%;
            flex-basis: $width;
        }
    }

    @each $breackpoint,
    $breackpoint-value in $breack-points {
        @media screen and (max-width: $breackpoint-value) {
            @for $i from 1 through $count {
                $width: math.div(100%, $count) * $i;

                .col-#{$breackpoint}-#{$i} {
                    max-width: $width;
                    width: 100%;
                    flex-basis: $width;
                }
            }
        }
    }
}

@mixin media($point) {
    @media screen and (max-width: map-get($breack-points, $point)) {
        @content;
    }
}

@mixin media-min($point) {
    @media screen and (min-width: map-get($breack-points, $point)) {
        @content;
    }
}

@mixin container {
    .container {
        max-width: $default-width;
        padding: $gap;
        margin: 0 auto;
    }
}

@mixin visuality-hidden {
    border: none !important;
    height: 1px !important;
    width: 1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    clip: rect(0, 0, 0, 0) !important;
    margin: -1px !important;
}

@mixin ellipsis($line: 1) {
    @if $line==1 {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }

    @else {
        text-overflow: ellipsis;
        overflow: hidden;
        display: -webkit-box !important;
        -webkit-line-clamp: $line;
        -webkit-box-orient: vertical;
        white-space: normal;
    }
}

@mixin placeholder() {
    &::-webkit-input-placeholder {
        @content;
    }

    &::-moz-placeholder {
        @content;
    }

    &:-ms-input-placeholder {
        @content;
    }

    &:-moz-placeholder {
        @content;
    }
}

@mixin bg-before($w, $h, $t, $l) {
    content: '';
    display: block;
    width: $w;
    height: $h;
    background-repeat: no-repeat;
    position: absolute;
    top: $t;
    left: $l;
    @content;
}

@mixin text($font: $main-font, $weight: $font-weight-text, $f-size: 18px, $line-h: 27px, $clr: $text-contact-color) {
    font-family: $font;
    font-weight: $weight;
    font-size: $f-size;
    line-height: $line-h;
    color: $clr;
}
