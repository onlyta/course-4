@mixin font-face($_font-name, $_font-file, $_font-weight, $_font-style: normal) {
    @font-face {
        font-family: $_font-name;
        font-style: $_font-style;
        font-weight: $_font-weight;
        src: local(''),
        url('#{$path-fonts}#{$_font-file}.woff2') format('woff2'),
        url('#{$path-fonts}#{$_font-file}.woff') format('woff');
    }
}

@mixin grid($count) {
    .row {
        display: flex;
        flex-wrap: wrap;
        margin: 0 (-$gap);
    }

    [class^="col-"] {
        padding: $gap;
        box-sizing: border-box;
    }

    @for $i from 1 through $count {
        $width: math.div(100%, $count) * $i;

        .col-#{$i} {
            max-width: $width;
            width: 100%;
            flex-basis: $width;
        }
    }

    @each $breackpoint,
    $breackpoint-value in $breack-points {
        @media screen and (max-width: $breackpoint-value) {
            @for $i from 1 through $count {
                $width: math.div(100%, $count) * $i;

                .col-#{$breackpoint}-#{$i} {
                    max-width: $width;
                    width: 100%;
                    flex-basis: $width;
                }
            }
        }
    }
}

// @mixin media($point) {
//     @media screen and (max-width: $point) {
//         @content;
//     }
// }
// міксин для медіазапита
@mixin media($point) {
    @media screen and (max-width: map-get($breack-points, $point)) {
        @content;
    }
}
